syntax = "proto3";
package nrt;
import "common.proto";
import "nmgr.proto";

service nmgr_v1 {
  rpc load(stream load_request) returns (load_response) {}
  rpc unload(unload_request) returns (unload_response) {}
  rpc start(start_request) returns (start_response) {}
  rpc stop(stop_request) returns (stop_response) {}
  rpc infer(infer_request) returns (infer_response) {}
  rpc infer_post(infer_request) returns (infer_post_response) {}
  rpc infer_wait(infer_wait_request) returns (infer_response) {}
  rpc infer_poll(infer_wait_request) returns (infer_response) {}
  rpc infer_check_completion(infer_check_completion_request) returns (infer_check_completion_response) {}

  rpc create_eg(create_eg_request) returns (create_eg_response) {}
  rpc destroy_eg(destroy_eg_request) returns (destroy_eg_response) {}
  rpc list_egs(empty) returns (out_list_egs) {}

  rpc read_nc_counters(read_nc_counters_request) returns (read_nc_counters_response) {}
  rpc read_nc_time_in_use(read_nc_time_in_use_request) returns (read_nc_time_in_use_response) {}
  rpc read_inference_counters(empty) returns (read_inference_counters_response) {}
  rpc read_all_counters(read_all_counters_request) returns (read_all_counters_response) {}
  rpc read_all_metrics(read_all_metrics_request) returns (read_all_metrics_response) {}

  // posix shared memory open/close
  // in_shm.path can be used in shared_mem_buf object
  rpc shm_map(shm_map_request) returns (shm_map_response){}
  rpc shm_unmap(shm_unmap_request) returns (shm_unmap_response){}
  // get hardware counters for a specific Inferentia
  rpc get_hw_counters(get_hw_counters_request) returns (get_hw_counters_response){}
  // get hardware counters of all Inferntias
  rpc get_all_hw_counters(empty) returns (get_all_hw_counters_response){}
  // unload all loaded NNs and remove all EGs
  rpc unload_all(empty) returns (status) {}

  rpc random_seed(random_seed_request) returns(random_seed_response) {}

  rpc get_version(get_version_request) returns (get_version_response) {}
  rpc set_static_transfer_adjustment(set_static_transfer_adjustment_request) returns (set_static_transfer_adjustment_response) {}
}
